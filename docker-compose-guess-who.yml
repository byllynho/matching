version: '3.7'
services:
  nginx:
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    depends_on:
      - guess-who
  
  #RABBITMQ
  message-broker:
    image: rabbitmq:3-management
    environment:
    - RABBITMQ_DEFAULT_USER=guest
    - RABBITMQ_DEFAULT_PASS=guest
    ports:
    - 5672:5672
    - 15672:15672

  postgres:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data:cached
  
  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        #SEGAWAY_BUILD_USERNAME:
        #SEGAWAY_BUILD_TOKEN:
    environment:
      #WORKER AND BACKEND MUST HAVE THE SAME VARIABLES
      PYTHONPATH: .
      DATABASE_URL: postgresql://postgres:password@postgres:5432/postgres
      PROJECT_NAME: visionaire-web-dev
      SEGAWAY_BROKER_URL: amqp://guest:guest@message-broker:5672
      SEGAWAY_KAFKA_URL: broker:29092
      SEGAWAY_KAFKA_PERFECT_MATCH: perfect_match
      SEGAWAY_KAFKA_INSTANCE_TOPIC: orthanc-index
      SONADOR_URL: http://imaging.visdev.smith-nephew.com
      SONADOR_INTERNAL_DNS: 'False'
      #SONADOR_IMAGING_SERVER:
      #SONADOR_APITOKEN:
      ALLOWED_ORIGINS: 'http://localhost,http://localhost:3000'
      #VCM_USER:
      #VCM_PASSWORD:
      #JWT_KEY:
      #JWT_AUDIENCE:
      AUTH_URL: https://auth.visdev.smith-nephew.com
      #AUTH_API_KEY:
    command: celery --app app.tasks worker --loglevel=DEBUG
  
  guess-who:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        #SEGAWAY_BUILD_USERNAME: 
        #SEGAWAY_BUILD_TOKEN:
    command: python app/main.py
    tty: true
    volumes:
      - .:/app/:cached
    environment:
      #WORKER AND BACKEND MUST HAVE THE SAME VARIABLES
      PYTHONPATH: .
      DATABASE_URL: postgresql://postgres:password@postgres:5432/postgres
      PROJECT_NAME: visionaire-web-dev
      SEGAWAY_BROKER_URL: amqp://guest:guest@message-broker:5672
      SEGAWAY_KAFKA_URL: broker:29092
      SEGAWAY_KAFKA_PERFECT_MATCH: perfect_match
      SEGAWAY_KAFKA_INSTANCE_TOPIC: orthanc-index
      SONADOR_URL: http://imaging.visdev.smith-nephew.com
      SONADOR_INTERNAL_DNS: 'False'
      #SONADOR_IMAGING_SERVER:
      #SONADOR_APITOKEN:
      ALLOWED_ORIGINS: 'http://localhost,http://localhost:3000'
      #VCM_USER:
      #VCM_PASSWORD:
      #JWT_KEY:
      #JWT_AUDIENCE:
      AUTH_URL: https://auth.visdev.smith-nephew.com
      #AUTH_API_KEY:
    depends_on:
      - "postgres"

  flower:  
    image: mher/flower
    command: celery flower --broker=amqp://guest:guest@message-broker:5672 --port=5555
    ports:  
        - 5555:5555
    depends_on:
      - "message-broker"
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.0.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.0.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

volumes:
  db-data:

networks:
  default:
    external: true
    name: compose_default